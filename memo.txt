作成記録
*TODO*
- 入力の3次元対応
目下の問題は
Array<f32, D>に対して、batch_dataを取り出せない事。
Array2<f32>なら、Array::from_shape_fn((m, n), |(i,j)| data[batch_idx[i], j])
てな感じで、一応できていたが、dimentionをジェネリックにした事で、data[x, y]が使えなくなって困っている。
そもそも部分的なarrayを取り出す方法としては、.sliceが普通のようで、
slice_axisというメソッドもあって、
arr.slice_axis(Axis(1), Slice::from(1..5))
とする事で、一般のArray<_, D>に対してnumpyでいうところの
arr[:, 1:5]ができるようだ(Dが1次元以下ならpanicするのだろう)が、
このスライスというやつが、任意のインデックスではなく、1..6;2( = [1, 3, 5])
みたいに、start, stop, stepで決まるものしか使えないので困る。
一応、同じインデックスがきたら、二重の参照が発生し得てまずいという事だろうか、、、
いや、可変参照でなければ問題なくないか??
ArrayViewは不変参照だろう。可変参照はArrayViewMutかなんかなはずだ。

2020/01/17
Seq2Seq, PeekyDecoderによる足し算の学習記録
いつまでたっても間違えるあたり、人間らしいと言える。何を間違えるのか出力させればよかった。
|epoch 6| iter 20/351 | time 104[s] | loss 0.51696354
|epoch 6| iter 40/351 | time 105[s] | loss 0.5169903
|epoch 6| iter 60/351 | time 105[s] | loss 0.5100185
|epoch 6| iter 80/351 | time 106[s] | loss 0.50263286
|epoch 6| iter 100/351 | time 107[s] | loss 0.501661
|epoch 6| iter 120/351 | time 108[s] | loss 0.4951662
|epoch 6| iter 140/351 | time 109[s] | loss 0.48786145
|epoch 6| iter 160/351 | time 110[s] | loss 0.49182907
|epoch 6| iter 180/351 | time 111[s] | loss 0.4937207
|epoch 6| iter 200/351 | time 112[s] | loss 0.49317104
|epoch 6| iter 220/351 | time 113[s] | loss 0.48965263
|epoch 6| iter 240/351 | time 114[s] | loss 0.48712665
|epoch 6| iter 260/351 | time 115[s] | loss 0.48728174
|epoch 6| iter 280/351 | time 115[s] | loss 0.48912954
|epoch 6| iter 300/351 | time 116[s] | loss 0.48586923
|epoch 6| iter 320/351 | time 117[s] | loss 0.48011145
|epoch 6| iter 340/351 | time 118[s] | loss 0.48930565
698+341_1039
698+341_1040
wrong!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _359 
wrong!
87+28  _115 
87+28  _116 
wrong!
7+234  _241 
7+234  _240 
wrong!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _626 
wrong!
acc= 0.2792; 
|epoch 7| iter 20/351 | time 124[s] | loss 0.46382648
|epoch 7| iter 40/351 | time 125[s] | loss 0.45599285
|epoch 7| iter 60/351 | time 126[s] | loss 0.45762897
|epoch 7| iter 80/351 | time 127[s] | loss 0.46106544
|epoch 7| iter 100/351 | time 128[s] | loss 0.4604291
|epoch 7| iter 120/351 | time 128[s] | loss 0.45270005
|epoch 7| iter 140/351 | time 129[s] | loss 0.45352703
|epoch 7| iter 160/351 | time 130[s] | loss 0.45980883
|epoch 7| iter 180/351 | time 131[s] | loss 0.4506491
|epoch 7| iter 200/351 | time 132[s] | loss 0.45702833
|epoch 7| iter 220/351 | time 133[s] | loss 0.44346404
|epoch 7| iter 240/351 | time 133[s] | loss 0.4474538
|epoch 7| iter 260/351 | time 134[s] | loss 0.4560687
|epoch 7| iter 280/351 | time 135[s] | loss 0.4436234
|epoch 7| iter 300/351 | time 136[s] | loss 0.4333705
|epoch 7| iter 320/351 | time 137[s] | loss 0.4397686
|epoch 7| iter 340/351 | time 138[s] | loss 0.43906584
698+341_1039
698+341_1040
wrong!
415+87 _502 
415+87 _500 
wrong!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _359 
wrong!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _242 
wrong!
54+203 _257 
54+203 _259 
wrong!
581+46 _627 
581+46 _628 
wrong!
acc= 0.3226; 
|epoch 8| iter 20/351 | time 144[s] | loss 0.42871267
|epoch 8| iter 40/351 | time 145[s] | loss 0.4263712
|epoch 8| iter 60/351 | time 146[s] | loss 0.43430805
|epoch 8| iter 80/351 | time 147[s] | loss 0.41824526
|epoch 8| iter 100/351 | time 148[s] | loss 0.4191276
|epoch 8| iter 120/351 | time 149[s] | loss 0.41985187
|epoch 8| iter 140/351 | time 150[s] | loss 0.41928822
|epoch 8| iter 160/351 | time 150[s] | loss 0.42754537
|epoch 8| iter 180/351 | time 151[s] | loss 0.42475358
|epoch 8| iter 200/351 | time 152[s] | loss 0.41187358
|epoch 8| iter 220/351 | time 153[s] | loss 0.41673508
|epoch 8| iter 240/351 | time 154[s] | loss 0.40805006
|epoch 8| iter 260/351 | time 155[s] | loss 0.40048212
|epoch 8| iter 280/351 | time 156[s] | loss 0.4031679
|epoch 8| iter 300/351 | time 157[s] | loss 0.40490276
|epoch 8| iter 320/351 | time 158[s] | loss 0.408525
|epoch 8| iter 340/351 | time 159[s] | loss 0.40685028
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _500 
wrong!
99+189 _288 
99+189 _289 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _103 
wrong!
5+353  _358 
5+353  _359 
wrong!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _256 
wrong!
581+46 _627 
581+46 _626 
wrong!
acc= 0.3736; 
|epoch 9| iter 20/351 | time 166[s] | loss 0.3904327
|epoch 9| iter 40/351 | time 167[s] | loss 0.39327288
|epoch 9| iter 60/351 | time 168[s] | loss 0.38272485
|epoch 9| iter 80/351 | time 169[s] | loss 0.3880607
|epoch 9| iter 100/351 | time 170[s] | loss 0.37787527
|epoch 9| iter 120/351 | time 171[s] | loss 0.37221923
|epoch 9| iter 140/351 | time 172[s] | loss 0.36995476
|epoch 9| iter 160/351 | time 173[s] | loss 0.36292854
|epoch 9| iter 180/351 | time 174[s] | loss 0.3589107
|epoch 9| iter 200/351 | time 175[s] | loss 0.36004275
|epoch 9| iter 220/351 | time 176[s] | loss 0.37223855
|epoch 9| iter 240/351 | time 176[s] | loss 0.35730538
|epoch 9| iter 260/351 | time 177[s] | loss 0.3535537
|epoch 9| iter 280/351 | time 178[s] | loss 0.3547458
|epoch 9| iter 300/351 | time 179[s] | loss 0.339428
|epoch 9| iter 320/351 | time 180[s] | loss 0.33581024
|epoch 9| iter 340/351 | time 181[s] | loss 0.33426023
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _359 
wrong!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _242 
wrong!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.543; 
|epoch 10| iter 20/351 | time 187[s] | loss 0.31845912
|epoch 10| iter 40/351 | time 188[s] | loss 0.31384835
|epoch 10| iter 60/351 | time 189[s] | loss 0.31292108
|epoch 10| iter 80/351 | time 190[s] | loss 0.3083893
|epoch 10| iter 100/351 | time 191[s] | loss 0.30092183
|epoch 10| iter 120/351 | time 191[s] | loss 0.2961881
|epoch 10| iter 140/351 | time 192[s] | loss 0.2953909
|epoch 10| iter 160/351 | time 193[s] | loss 0.28415424
|epoch 10| iter 180/351 | time 194[s] | loss 0.28672308
|epoch 10| iter 200/351 | time 195[s] | loss 0.2777447
|epoch 10| iter 220/351 | time 196[s] | loss 0.26743674
|epoch 10| iter 240/351 | time 196[s] | loss 0.26556215
|epoch 10| iter 260/351 | time 197[s] | loss 0.2610194
|epoch 10| iter 280/351 | time 198[s] | loss 0.26357552
|epoch 10| iter 300/351 | time 199[s] | loss 0.25818005
|epoch 10| iter 320/351 | time 200[s] | loss 0.25208315
|epoch 10| iter 340/351 | time 201[s] | loss 0.24115118
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _286 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _359 
wrong!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.6922; 
|epoch 11| iter 20/351 | time 207[s] | loss 0.22578771
|epoch 11| iter 40/351 | time 208[s] | loss 0.22778752
|epoch 11| iter 60/351 | time 209[s] | loss 0.21979325
|epoch 11| iter 80/351 | time 209[s] | loss 0.2134387
|epoch 11| iter 100/351 | time 210[s] | loss 0.2115463
|epoch 11| iter 120/351 | time 211[s] | loss 0.21013597
|epoch 11| iter 140/351 | time 212[s] | loss 0.20332631
|epoch 11| iter 160/351 | time 213[s] | loss 0.19898795
|epoch 11| iter 180/351 | time 214[s] | loss 0.19976284
|epoch 11| iter 200/351 | time 214[s] | loss 0.2009327
|epoch 11| iter 220/351 | time 215[s] | loss 0.19095556
|epoch 11| iter 240/351 | time 216[s] | loss 0.18634446
|epoch 11| iter 260/351 | time 217[s] | loss 0.18238449
|epoch 11| iter 280/351 | time 218[s] | loss 0.18872142
|epoch 11| iter 300/351 | time 219[s] | loss 0.17949721
|epoch 11| iter 320/351 | time 219[s] | loss 0.17491779
|epoch 11| iter 340/351 | time 220[s] | loss 0.16997068
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _242 
wrong!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.8066; 
|epoch 12| iter 20/351 | time 226[s] | loss 0.15729517
|epoch 12| iter 40/351 | time 227[s] | loss 0.14907406
|epoch 12| iter 60/351 | time 228[s] | loss 0.143154
|epoch 12| iter 80/351 | time 229[s] | loss 0.14469159
|epoch 12| iter 100/351 | time 230[s] | loss 0.14163642
|epoch 12| iter 120/351 | time 231[s] | loss 0.1414991
|epoch 12| iter 140/351 | time 231[s] | loss 0.13326971
|epoch 12| iter 160/351 | time 232[s] | loss 0.13459554
|epoch 12| iter 180/351 | time 233[s] | loss 0.1319015
|epoch 12| iter 200/351 | time 234[s] | loss 0.12510274
|epoch 12| iter 220/351 | time 235[s] | loss 0.12263032
|epoch 12| iter 240/351 | time 236[s] | loss 0.13071017
|epoch 12| iter 260/351 | time 237[s] | loss 0.12217184
|epoch 12| iter 280/351 | time 237[s] | loss 0.11388316
|epoch 12| iter 300/351 | time 238[s] | loss 0.10540819
|epoch 12| iter 320/351 | time 239[s] | loss 0.11031517
|epoch 12| iter 340/351 | time 240[s] | loss 0.103131965
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.8962; 
|epoch 13| iter 20/351 | time 246[s] | loss 0.10103138
|epoch 13| iter 40/351 | time 247[s] | loss 0.08991395
|epoch 13| iter 60/351 | time 248[s] | loss 0.08870252
|epoch 13| iter 80/351 | time 249[s] | loss 0.09138995
|epoch 13| iter 100/351 | time 249[s] | loss 0.09486504
|epoch 13| iter 120/351 | time 250[s] | loss 0.09537561
|epoch 13| iter 140/351 | time 251[s] | loss 0.08733449
|epoch 13| iter 160/351 | time 252[s] | loss 0.0789165
|epoch 13| iter 180/351 | time 253[s] | loss 0.08244817
|epoch 13| iter 200/351 | time 254[s] | loss 0.07847975
|epoch 13| iter 220/351 | time 255[s] | loss 0.0735241
|epoch 13| iter 240/351 | time 255[s] | loss 0.07195033
|epoch 13| iter 260/351 | time 256[s] | loss 0.07424697
|epoch 13| iter 280/351 | time 257[s] | loss 0.071197204
|epoch 13| iter 300/351 | time 258[s] | loss 0.06716469
|epoch 13| iter 320/351 | time 259[s] | loss 0.068628415
|epoch 13| iter 340/351 | time 260[s] | loss 0.06488685
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.943; 
|epoch 14| iter 20/351 | time 266[s] | loss 0.057789396
|epoch 14| iter 40/351 | time 267[s] | loss 0.059089847
|epoch 14| iter 60/351 | time 267[s] | loss 0.05520258
|epoch 14| iter 80/351 | time 268[s] | loss 0.05332941
|epoch 14| iter 100/351 | time 269[s] | loss 0.056852102
|epoch 14| iter 120/351 | time 270[s] | loss 0.052899837
|epoch 14| iter 140/351 | time 271[s] | loss 0.056596898
|epoch 14| iter 160/351 | time 272[s] | loss 0.05740582
|epoch 14| iter 180/351 | time 272[s] | loss 0.053902853
|epoch 14| iter 200/351 | time 273[s] | loss 0.054701924
|epoch 14| iter 220/351 | time 274[s] | loss 0.05537028
|epoch 14| iter 240/351 | time 275[s] | loss 0.0566204
|epoch 14| iter 260/351 | time 276[s] | loss 0.058520902
|epoch 14| iter 280/351 | time 277[s] | loss 0.057524722
|epoch 14| iter 300/351 | time 277[s] | loss 0.058893453
|epoch 14| iter 320/351 | time 278[s] | loss 0.049536854
|epoch 14| iter 340/351 | time 279[s] | loss 0.04750174
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9506; 
|epoch 15| iter 20/351 | time 285[s] | loss 0.040571835
|epoch 15| iter 40/351 | time 286[s] | loss 0.03822599
|epoch 15| iter 60/351 | time 287[s] | loss 0.036648907
|epoch 15| iter 80/351 | time 288[s] | loss 0.037592657
|epoch 15| iter 100/351 | time 289[s] | loss 0.037422188
|epoch 15| iter 120/351 | time 290[s] | loss 0.037776865
|epoch 15| iter 140/351 | time 290[s] | loss 0.037504885
|epoch 15| iter 160/351 | time 291[s] | loss 0.038882725
|epoch 15| iter 180/351 | time 292[s] | loss 0.03891956
|epoch 15| iter 200/351 | time 293[s] | loss 0.037930973
|epoch 15| iter 220/351 | time 294[s] | loss 0.038160328
|epoch 15| iter 240/351 | time 295[s] | loss 0.0402982
|epoch 15| iter 260/351 | time 295[s] | loss 0.037088025
|epoch 15| iter 280/351 | time 296[s] | loss 0.03352551
|epoch 15| iter 300/351 | time 297[s] | loss 0.03625818
|epoch 15| iter 320/351 | time 298[s] | loss 0.034441
|epoch 15| iter 340/351 | time 299[s] | loss 0.035650186
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9612; 
|epoch 16| iter 20/351 | time 305[s] | loss 0.039782327
|epoch 16| iter 40/351 | time 306[s] | loss 0.034223553
|epoch 16| iter 60/351 | time 307[s] | loss 0.035166215
|epoch 16| iter 80/351 | time 308[s] | loss 0.034421533
|epoch 16| iter 100/351 | time 308[s] | loss 0.030773032
|epoch 16| iter 120/351 | time 309[s] | loss 0.03828894
|epoch 16| iter 140/351 | time 310[s] | loss 0.035100877
|epoch 16| iter 160/351 | time 311[s] | loss 0.033469923
|epoch 16| iter 180/351 | time 312[s] | loss 0.039180897
|epoch 16| iter 200/351 | time 313[s] | loss 0.031178039
|epoch 16| iter 220/351 | time 313[s] | loss 0.031266946
|epoch 16| iter 240/351 | time 314[s] | loss 0.032394353
|epoch 16| iter 260/351 | time 315[s] | loss 0.03409906
|epoch 16| iter 280/351 | time 316[s] | loss 0.03478631
|epoch 16| iter 300/351 | time 317[s] | loss 0.0303354
|epoch 16| iter 320/351 | time 318[s] | loss 0.032520045
|epoch 16| iter 340/351 | time 318[s] | loss 0.03369345
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9706; 
|epoch 17| iter 20/351 | time 325[s] | loss 0.03302819
|epoch 17| iter 40/351 | time 326[s] | loss 0.034100097
|epoch 17| iter 60/351 | time 326[s] | loss 0.0275125
|epoch 17| iter 80/351 | time 327[s] | loss 0.02708385
|epoch 17| iter 100/351 | time 328[s] | loss 0.02807332
|epoch 17| iter 120/351 | time 329[s] | loss 0.027421903
|epoch 17| iter 140/351 | time 330[s] | loss 0.027756993
|epoch 17| iter 160/351 | time 331[s] | loss 0.028281251
|epoch 17| iter 180/351 | time 331[s] | loss 0.023464475
|epoch 17| iter 200/351 | time 332[s] | loss 0.021220043
|epoch 17| iter 220/351 | time 333[s] | loss 0.021308988
|epoch 17| iter 240/351 | time 334[s] | loss 0.022288697
|epoch 17| iter 260/351 | time 335[s] | loss 0.029198583
|epoch 17| iter 280/351 | time 336[s] | loss 0.024191828
|epoch 17| iter 300/351 | time 336[s] | loss 0.024183026
|epoch 17| iter 320/351 | time 337[s] | loss 0.024532842
|epoch 17| iter 340/351 | time 338[s] | loss 0.02341478
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9738; 
|epoch 18| iter 20/351 | time 344[s] | loss 0.022988569
|epoch 18| iter 40/351 | time 345[s] | loss 0.023911262
|epoch 18| iter 60/351 | time 346[s] | loss 0.021077927
|epoch 18| iter 80/351 | time 347[s] | loss 0.019261263
|epoch 18| iter 100/351 | time 348[s] | loss 0.017676676
|epoch 18| iter 120/351 | time 349[s] | loss 0.01623861
|epoch 18| iter 140/351 | time 349[s] | loss 0.015474019
|epoch 18| iter 160/351 | time 350[s] | loss 0.017836101
|epoch 18| iter 180/351 | time 351[s] | loss 0.015416542
|epoch 18| iter 200/351 | time 352[s] | loss 0.014526906
|epoch 18| iter 220/351 | time 353[s] | loss 0.014478085
|epoch 18| iter 240/351 | time 354[s] | loss 0.013643446
|epoch 18| iter 260/351 | time 354[s] | loss 0.014085092
|epoch 18| iter 280/351 | time 355[s] | loss 0.014399737
|epoch 18| iter 300/351 | time 356[s] | loss 0.017786803
|epoch 18| iter 320/351 | time 357[s] | loss 0.019564584
|epoch 18| iter 340/351 | time 358[s] | loss 0.027145606
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.947; 
|epoch 19| iter 20/351 | time 364[s] | loss 0.03609637
|epoch 19| iter 40/351 | time 365[s] | loss 0.030669224
|epoch 19| iter 60/351 | time 366[s] | loss 0.029079113
|epoch 19| iter 80/351 | time 366[s] | loss 0.02341803
|epoch 19| iter 100/351 | time 367[s] | loss 0.026537087
|epoch 19| iter 120/351 | time 368[s] | loss 0.020316591
|epoch 19| iter 140/351 | time 369[s] | loss 0.019190788
|epoch 19| iter 160/351 | time 370[s] | loss 0.016454514
|epoch 19| iter 180/351 | time 371[s] | loss 0.0150926905
|epoch 19| iter 200/351 | time 372[s] | loss 0.015053359
|epoch 19| iter 220/351 | time 372[s] | loss 0.014561772
|epoch 19| iter 240/351 | time 373[s] | loss 0.014911609
|epoch 19| iter 260/351 | time 374[s] | loss 0.015537595
|epoch 19| iter 280/351 | time 375[s] | loss 0.012709838
|epoch 19| iter 300/351 | time 376[s] | loss 0.016423952
|epoch 19| iter 320/351 | time 377[s] | loss 0.016034435
|epoch 19| iter 340/351 | time 378[s] | loss 0.028420452
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9222; 
|epoch 20| iter 20/351 | time 384[s] | loss 0.04413656
|epoch 20| iter 40/351 | time 385[s] | loss 0.042830326
|epoch 20| iter 60/351 | time 386[s] | loss 0.04167644
|epoch 20| iter 80/351 | time 387[s] | loss 0.03592383
|epoch 20| iter 100/351 | time 388[s] | loss 0.025420567
|epoch 20| iter 120/351 | time 389[s] | loss 0.020374821
|epoch 20| iter 140/351 | time 389[s] | loss 0.016170565
|epoch 20| iter 160/351 | time 390[s] | loss 0.01525679
|epoch 20| iter 180/351 | time 391[s] | loss 0.016568262
|epoch 20| iter 200/351 | time 392[s] | loss 0.012833267
|epoch 20| iter 220/351 | time 393[s] | loss 0.012136563
|epoch 20| iter 240/351 | time 394[s] | loss 0.011208901
|epoch 20| iter 260/351 | time 395[s] | loss 0.01129395
|epoch 20| iter 280/351 | time 395[s] | loss 0.00853043
|epoch 20| iter 300/351 | time 396[s] | loss 0.00884772
|epoch 20| iter 320/351 | time 397[s] | loss 0.008352374
|epoch 20| iter 340/351 | time 398[s] | loss 0.0068194205
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9958; 
|epoch 21| iter 20/351 | time 404[s] | loss 0.0066244816
|epoch 21| iter 40/351 | time 405[s] | loss 0.0062504252
|epoch 21| iter 60/351 | time 406[s] | loss 0.0062151314
|epoch 21| iter 80/351 | time 407[s] | loss 0.0057009137
|epoch 21| iter 100/351 | time 408[s] | loss 0.00648201
|epoch 21| iter 120/351 | time 408[s] | loss 0.006340864
|epoch 21| iter 140/351 | time 409[s] | loss 0.0069972896
|epoch 21| iter 160/351 | time 410[s] | loss 0.006922447
|epoch 21| iter 180/351 | time 411[s] | loss 0.0063672587
|epoch 21| iter 200/351 | time 412[s] | loss 0.0062846555
|epoch 21| iter 220/351 | time 413[s] | loss 0.0063520307
|epoch 21| iter 240/351 | time 413[s] | loss 0.005937467
|epoch 21| iter 260/351 | time 414[s] | loss 0.006342818
|epoch 21| iter 280/351 | time 415[s] | loss 0.0072756386
|epoch 21| iter 300/351 | time 416[s] | loss 0.0075823865
|epoch 21| iter 320/351 | time 417[s] | loss 0.005915331
|epoch 21| iter 340/351 | time 418[s] | loss 0.0055833543
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.995; 
|epoch 22| iter 20/351 | time 424[s] | loss 0.005168106
|epoch 22| iter 40/351 | time 425[s] | loss 0.005196007
|epoch 22| iter 60/351 | time 426[s] | loss 0.005381695
|epoch 22| iter 80/351 | time 427[s] | loss 0.004977341
|epoch 22| iter 100/351 | time 427[s] | loss 0.005257136
|epoch 22| iter 120/351 | time 428[s] | loss 0.0047173006
|epoch 22| iter 140/351 | time 429[s] | loss 0.0044331467
|epoch 22| iter 160/351 | time 430[s] | loss 0.004578624
|epoch 22| iter 180/351 | time 431[s] | loss 0.005739702
|epoch 22| iter 200/351 | time 432[s] | loss 0.0075581474
|epoch 22| iter 220/351 | time 433[s] | loss 0.00923829
|epoch 22| iter 240/351 | time 434[s] | loss 0.007930845
|epoch 22| iter 260/351 | time 435[s] | loss 0.009254497
|epoch 22| iter 280/351 | time 436[s] | loss 0.011394147
|epoch 22| iter 300/351 | time 437[s] | loss 0.010047555
|epoch 22| iter 320/351 | time 438[s] | loss 0.022756781
|epoch 22| iter 340/351 | time 438[s] | loss 0.04577286
698+341_1039
698+341_1040
wrong!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _287 
wrong!
16+34  _50  
16+34  _49  
wrong!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _247 
wrong!
581+46 _627 
581+46 _627 
collect!
acc= 0.8996; 
|epoch 23| iter 20/351 | time 445[s] | loss 0.12746969
|epoch 23| iter 40/351 | time 446[s] | loss 0.104328215
|epoch 23| iter 60/351 | time 447[s] | loss 0.08353229
|epoch 23| iter 80/351 | time 448[s] | loss 0.039157167
|epoch 23| iter 100/351 | time 449[s] | loss 0.024433475
|epoch 23| iter 120/351 | time 450[s] | loss 0.01588892
|epoch 23| iter 140/351 | time 451[s] | loss 0.018062707
|epoch 23| iter 160/351 | time 452[s] | loss 0.017705858
|epoch 23| iter 180/351 | time 453[s] | loss 0.012974638
|epoch 23| iter 200/351 | time 454[s] | loss 0.009437104
|epoch 23| iter 220/351 | time 455[s] | loss 0.008096688
|epoch 23| iter 240/351 | time 456[s] | loss 0.00697424
|epoch 23| iter 260/351 | time 457[s] | loss 0.0067306357
|epoch 23| iter 280/351 | time 458[s] | loss 0.00685078
|epoch 23| iter 300/351 | time 459[s] | loss 0.0072707906
|epoch 23| iter 320/351 | time 460[s] | loss 0.0051997923
|epoch 23| iter 340/351 | time 461[s] | loss 0.00475293
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.996; 
|epoch 24| iter 20/351 | time 467[s] | loss 0.004507032
|epoch 24| iter 40/351 | time 468[s] | loss 0.0043408303
|epoch 24| iter 60/351 | time 469[s] | loss 0.0037633788
|epoch 24| iter 80/351 | time 470[s] | loss 0.0038250342
|epoch 24| iter 100/351 | time 471[s] | loss 0.003744896
|epoch 24| iter 120/351 | time 472[s] | loss 0.0039719613
|epoch 24| iter 140/351 | time 472[s] | loss 0.003882828
|epoch 24| iter 160/351 | time 473[s] | loss 0.0033788246
|epoch 24| iter 180/351 | time 474[s] | loss 0.0040871375
|epoch 24| iter 200/351 | time 475[s] | loss 0.003985147
|epoch 24| iter 220/351 | time 476[s] | loss 0.0038802263
|epoch 24| iter 240/351 | time 477[s] | loss 0.003955501
|epoch 24| iter 260/351 | time 477[s] | loss 0.004901038
|epoch 24| iter 280/351 | time 478[s] | loss 0.0055828867
|epoch 24| iter 300/351 | time 479[s] | loss 0.0046078777
|epoch 24| iter 320/351 | time 480[s] | loss 0.005148691
|epoch 24| iter 340/351 | time 481[s] | loss 0.004515161
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9964; 
|epoch 25| iter 20/351 | time 487[s] | loss 0.0036953725
|epoch 25| iter 40/351 | time 488[s] | loss 0.0037099295
|epoch 25| iter 60/351 | time 489[s] | loss 0.0034727077
|epoch 25| iter 80/351 | time 490[s] | loss 0.0029821745
|epoch 25| iter 100/351 | time 490[s] | loss 0.0033742487
|epoch 25| iter 120/351 | time 491[s] | loss 0.003815978
|epoch 25| iter 140/351 | time 492[s] | loss 0.003744597
|epoch 25| iter 160/351 | time 493[s] | loss 0.0033194404
|epoch 25| iter 180/351 | time 494[s] | loss 0.0032352754
|epoch 25| iter 200/351 | time 495[s] | loss 0.0027119168
|epoch 25| iter 220/351 | time 495[s] | loss 0.0028946796
|epoch 25| iter 240/351 | time 496[s] | loss 0.0035255714
|epoch 25| iter 260/351 | time 497[s] | loss 0.0036609143
|epoch 25| iter 280/351 | time 498[s] | loss 0.0066919765
|epoch 25| iter 300/351 | time 499[s] | loss 0.008368725
|epoch 25| iter 320/351 | time 500[s] | loss 0.031535733
|epoch 25| iter 340/351 | time 500[s] | loss 0.038067188
698+341_1039
698+341_1039
collect!
415+87 _502 
415+87 _502 
collect!
99+189 _288 
99+189 _288 
collect!
16+34  _50  
16+34  _50  
collect!
33+71  _104 
33+71  _104 
collect!
5+353  _358 
5+353  _358 
collect!
87+28  _115 
87+28  _115 
collect!
7+234  _241 
7+234  _241 
collect!
54+203 _257 
54+203 _257 
collect!
581+46 _627 
581+46 _627 
collect!
acc= 0.9192; 
self.ppl_list= [2.2798576, 1.8870096, 1.7834027, 1.7643683, 1.7456249, 1.7340262, 1.7079204, 1.6946542, 1.6748698, 1.6593895, 1.6276362, 1.5826716, 1.5261236, 1.4873788, 1.4413499, 1.4018623, 1.3692195, 1.3053286, 1.2841802, 1.2668574, 1.2300493, 1.1978699, 1.1758522, 1.1499048, 1.1335135, 1.0927205, 1.0770612, 1.0464185, 1.0218229, 0.9943964, 0.9789934, 0.96506435, 0.9334451, 0.9177602, 0.883278, 0.87711906, 0.8654947, 0.85363245, 0.83814603, 0.8193015, 0.80753535, 0.8044469, 0.7879878, 0.77463746, 0.7652433, 0.75589293, 0.750587, 0.73676616, 0.72700095, 0.71272045, 0.71998465, 0.6945079, 0.67931736, 0.6895366, 0.6827744, 0.6609204, 0.65438193, 0.6533264, 0.6457898, 0.6410744, 0.63230455, 0.6300555, 0.6275133, 0.6153611, 0.6125872, 0.61176616, 0.6019824, 0.60974395, 0.5859713, 0.57668513, 0.58122873, 0.579863, 0.5692235, 0.5579746, 0.5635907, 0.5585662, 0.56446946, 0.56374466, 0.5502801, 0.5418258, 0.5347382, 0.5489295, 0.5546259, 0.56086886, 0.537972, 0.51696354, 0.5169903, 0.5100185, 0.50263286, 0.501661, 0.4951662, 0.48786145, 0.49182907, 0.4937207, 0.49317104, 0.48965263, 0.48712665, 0.48728174, 0.48912954, 0.48586923, 0.48011145, 0.48930565, 0.46382648, 0.45599285, 0.45762897, 0.46106544, 0.4604291, 0.45270005, 0.45352703, 0.45980883, 0.4506491, 0.45702833, 0.44346404, 0.4474538, 0.4560687, 0.4436234, 0.4333705, 0.4397686, 0.43906584, 0.42871267, 0.4263712, 0.43430805, 0.41824526, 0.4191276, 0.41985187, 0.41928822, 0.42754537, 0.42475358, 0.41187358, 0.41673508, 0.40805006, 0.40048212, 0.4031679, 0.40490276, 0.408525, 0.40685028, 0.3904327, 0.39327288, 0.38272485, 0.3880607, 0.37787527, 0.37221923, 0.36995476, 0.36292854, 0.3589107, 0.36004275, 0.37223855, 0.35730538, 0.3535537, 0.3547458, 0.339428, 0.33581024, 0.33426023, 0.31845912, 0.31384835, 0.31292108, 0.3083893, 0.30092183, 0.2961881, 0.2953909, 0.28415424, 0.28672308, 0.2777447, 0.26743674, 0.26556215, 0.2610194, 0.26357552, 0.25818005, 0.25208315, 0.24115118, 0.22578771, 0.22778752, 0.21979325, 0.2134387, 0.2115463, 0.21013597, 0.20332631, 0.19898795, 0.19976284, 0.2009327, 0.19095556, 0.18634446, 0.18238449, 0.18872142, 0.17949721, 0.17491779, 0.16997068, 0.15729517, 0.14907406, 0.143154, 0.14469159, 0.14163642, 0.1414991, 0.13326971, 0.13459554, 0.1319015, 0.12510274, 0.12263032, 0.13071017, 0.12217184, 0.11388316, 0.10540819, 0.11031517, 0.103131965, 0.10103138, 0.08991395, 0.08870252, 0.09138995, 0.09486504, 0.09537561, 0.08733449, 0.0789165, 0.08244817, 0.07847975, 0.0735241, 0.07195033, 0.07424697, 0.071197204, 0.06716469, 0.068628415, 0.06488685, 0.057789396, 0.059089847, 0.05520258, 0.05332941, 0.056852102, 0.052899837, 0.056596898, 0.05740582, 0.053902853, 0.054701924, 0.05537028, 0.0566204, 0.058520902, 0.057524722, 0.058893453, 0.049536854, 0.04750174, 0.040571835, 0.03822599, 0.036648907, 0.037592657, 0.037422188, 0.037776865, 0.037504885, 0.038882725, 0.03891956, 0.037930973, 0.038160328, 0.0402982, 0.037088025, 0.03352551, 0.03625818, 0.034441, 0.035650186, 0.039782327, 0.034223553, 0.035166215, 0.034421533, 0.030773032, 0.03828894, 0.035100877, 0.033469923, 0.039180897, 0.031178039, 0.031266946, 0.032394353, 0.03409906, 0.03478631, 0.0303354, 0.032520045, 0.03369345, 0.03302819, 0.034100097, 0.0275125, 0.02708385, 0.02807332, 0.027421903, 0.027756993, 0.028281251, 0.023464475, 0.021220043, 0.021308988, 0.022288697, 0.029198583, 0.024191828, 0.024183026, 0.024532842, 0.02341478, 0.022988569, 0.023911262, 0.021077927, 0.019261263, 0.017676676, 0.01623861, 0.015474019, 0.017836101, 0.015416542, 0.014526906, 0.014478085, 0.013643446, 0.014085092, 0.014399737, 0.017786803, 0.019564584, 0.027145606, 0.03609637, 0.030669224, 0.029079113, 0.02341803, 0.026537087, 0.020316591, 0.019190788, 0.016454514, 0.0150926905, 0.015053359, 0.014561772, 0.014911609, 0.015537595, 0.012709838, 0.016423952, 0.016034435, 0.028420452, 0.04413656, 0.042830326, 0.04167644, 0.03592383, 0.025420567, 0.020374821, 0.016170565, 0.01525679, 0.016568262, 0.012833267, 0.012136563, 0.011208901, 0.01129395, 0.00853043, 0.00884772, 0.008352374, 0.0068194205, 0.0066244816, 0.0062504252, 0.0062151314, 0.0057009137, 0.00648201, 0.006340864, 0.0069972896, 0.006922447, 0.0063672587, 0.0062846555, 0.0063520307, 0.005937467, 0.006342818, 0.0072756386, 0.0075823865, 0.005915331, 0.0055833543, 0.005168106, 0.005196007, 0.005381695, 0.004977341, 0.005257136, 0.0047173006, 0.0044331467, 0.004578624, 0.005739702, 0.0075581474, 0.00923829, 0.007930845, 0.009254497, 0.011394147, 0.010047555, 0.022756781, 0.04577286, 0.12746969, 0.104328215, 0.08353229, 0.039157167, 0.024433475, 0.01588892, 0.018062707, 0.017705858, 0.012974638, 0.009437104, 0.008096688, 0.00697424, 0.0067306357, 0.00685078, 0.0072707906, 0.0051997923, 0.00475293, 0.004507032, 0.0043408303, 0.0037633788, 0.0038250342, 0.003744896, 0.0039719613, 0.003882828, 0.0033788246, 0.0040871375, 0.003985147, 0.0038802263, 0.003955501, 0.004901038, 0.0055828867, 0.0046078777, 0.005148691, 0.004515161, 0.0036953725, 0.0037099295, 0.0034727077, 0.0029821745, 0.0033742487, 0.003815978, 0.003744597, 0.0033194404, 0.0032352754, 0.0027119168, 0.0028946796, 0.0035255714, 0.0036609143, 0.0066919765, 0.008368725, 0.031535733, 0.038067188]; 
self.acc_list= [0.0128, 0.07, 0.1342, 0.1846, 0.2426, 0.2792, 0.3226, 0.3736, 0.543, 0.6922, 0.8066, 0.8962, 0.943, 0.9506, 0.9612, 0.9706, 0.9738, 0.947, 0.9222, 0.9958, 0.995, 0.8996, 0.996, 0.9964, 0.9192]; 

11/28 
ここ2週間くらいずっとやっているな...
putsマクロ作成
SimpleCBOWモデル作成に取り掛かる。
その過程で、TwoLayerNetから流用しようとすると、入力が2次元という前提が崩れるので、
次元のジェネリック化に取り組む。
ジェネリック次元で受け取ってから
        let x = contexts
            .into_dimensionality::<Ix3>()
            .expect("contexts array must be dim3");
という感じで次元チェックしてキャストすることができるので、個別メソッドはかけそうだが、
初めの方の、2次元、3次元共通の操作をどう書くかが問題。

|epoch 1| iter 20/1327 | time 5[s] | perplexity 4582.5454
|epoch 1| iter 40/1327 | time 9[s] | perplexity 1373.6024
|epoch 1| iter 60/1327 | time 14[s] | perplexity 1045.5115
|epoch 1| iter 80/1327 | time 19[s] | perplexity 854.92584
|epoch 1| iter 100/1327 | time 24[s] | perplexity 781.17633
|epoch 1| iter 120/1327 | time 29[s] | perplexity 669.42664
|epoch 1| iter 140/1327 | time 34[s] | perplexity 638.25586
|epoch 1| iter 160/1327 | time 39[s] | perplexity 661.27277
|epoch 1| iter 180/1327 | time 44[s] | perplexity 635.8561
|epoch 1| iter 200/1327 | time 49[s] | perplexity 615.3159
|epoch 1| iter 220/1327 | time 53[s] | perplexity 556.78613
|epoch 1| iter 240/1327 | time 58[s] | perplexity 557.4976
test train::ch06::ch06_test ... test train::ch06::ch06_test has been running for over 60 seconds
|epoch 1| iter 260/1327 | time 63[s] | perplexity 495.92358
|epoch 1| iter 280/1327 | time 68[s] | perplexity 537.25525
|epoch 1| iter 300/1327 | time 73[s] | perplexity 528.15466
|epoch 1| iter 320/1327 | time 78[s] | perplexity 440.4421
|epoch 1| iter 340/1327 | time 82[s] | perplexity 432.0781
|epoch 1| iter 360/1327 | time 87[s] | perplexity 528.1471
|epoch 1| iter 380/1327 | time 93[s] | perplexity 430.4847
^C